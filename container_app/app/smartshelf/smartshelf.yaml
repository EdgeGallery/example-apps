---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: obj-detection
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: obj-detection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: obj-detection
  template:
    metadata:
      labels:
        app: obj-detection
    spec:
      containers:
        - name: obj-detection
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/obj-detection:v1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9998
---
apiVersion: v1
kind: Service
metadata:
  name: obj-detection
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: obj-detection
spec:
  selector:
    app: obj-detection
  type: NodePort
  ports:
    - port: 9998
      name: service-port
      nodePort: 30998
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-proxy
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: node-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-proxy
  template:
    metadata:
      labels:
        app: node-proxy
    spec:
      containers:
        - name: node-proxy
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/robo-node-proxy:v1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: node-proxy
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: node-proxy
spec:
  type: NodePort
  selector:
    app: node-proxy
  ports:
    - protocol: "TCP"
      port: 5000
      targetPort: 5000
      nodePort: 30999
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smart-shelf
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: smart-shelf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smart-shelf
  template:
    metadata:
      labels:
        app: smart-shelf
    spec:
      containers:
        - name: smart-shelf
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/smartshelf:v1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9995
---
apiVersion: v1
kind: Service
metadata:
  name: smart-shelf
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: smart-shelf
spec:
  selector:
    app: smart-shelf
  type: NodePort
  ports:
    - port: 9995
      name: service-port
      nodePort: 30995
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: robo-fe
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: robo-fe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: robo-fe
  template:
    metadata:
      labels:
        app: robo-fe
    spec:
      containers:
        - name: robo-fe
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/robo-fe:v1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: robo-fe
  namespace: '{{ .Values.appconfig.appnamespace }}'
  labels:
    app: robo-fe
spec:
  type: NodePort
  selector:
    app: robo-fe
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
      nodePort: 30997

