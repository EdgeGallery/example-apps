apiVersion: v1
kind: ReplicationController
metadata:
  name: wordpress-db
spec:
  replicas: 1
  selector:
    app: wordpress-db
  template:
    metadata:
      labels:
        app: wordpress-db
    spec:
      containers:
      - name: wordpress-db
        image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/mysql:5.7'
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_DATABASE
          value: exampledb
        - name: MYSQL_USER
          value: exampleuser
        - name: MYSQL_PASSWORD
          value: examplepass
        - name: MYSQL_RANDOM_ROOT_PASSWORD
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-db
  labels:
    svc: wordpress-db
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: wordpress-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: default
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
  replicas: 1
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/wordpress:latest'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_HOST
              value: wordpress-db
            - name: WORDPRESS_DB_NAME
              value: exampledb
            - name: WORDPRESS_DB_USER
              value: exampleuser
            - name: WORDPRESS_DB_PASSWORD
              value: examplepass
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
  namespace: default
  labels:
    svc: wordpress-svc
spec:
  type: NodePort
  ports:
    - port: 80
      name: function1
      targetPort: 80
      protocol: TCP
      nodePort: 32697
  selector:
    app: wordpress

