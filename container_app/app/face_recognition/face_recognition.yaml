apiVersion: v1
kind: PersistentVolume
metadata:
  name: face-recognition-pv
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/etc/face-recognition-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: face-recognition-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: face-recognition
  labels:
    app: face-recognition
spec:
  containers:
  - name: face-recognition-app
    image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/face_recognition_app:v1.4'
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 9999
      protocol: TCP
  - name: face-recognition-postgresql
    image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/postgres:9.6.15'
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 5432
      protocol: TCP
    env:
      - name: POSTGRESQL_USERNAME
        value: postgres
      - name: POSTGRESQL_PASSWORD
        value: "root"
    volumeMounts:
          - name: face-recognition-data
            mountPath: /postgres/data
  - name: face-recognition-redis      
    image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/redis:alpine'
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 6379
      protocol: TCP
  # {{- if .Values.global.mepagent.enabled }}
  - name: mep-agent
    image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/mep-agent:v1.5.1'
    imagePullPolicy: Always
    env:
      - name: ENABLE_WAIT
        value: "true"
      - name: MEP_IP
        value: "mep-api-gw.mep"
      - name: MEP_APIGW_PORT
        value: "8443"
      - name: CA_CERT_DOMAIN_NAME
        value: "edgegallery"
      - name: CA_CERT
        value: /usr/mep/ssl/ca.crt
      - name: AK
        valueFrom:
          secretKeyRef:
            name: {{ .Values.appconfig.aksk.secretname }}
            key: accesskey
      - name: SK
        valueFrom:
          secretKeyRef:
            name: {{ .Values.appconfig.aksk.secretname }}
            key: secretkey
      - name: APPINSTID
        valueFrom:
          secretKeyRef:
            name: {{ .Values.appconfig.aksk.secretname }}
            key: appInsId
    volumeMounts:
      - name: mep-agent-service-config-volume
        mountPath: /usr/mep/conf/app_instance_info.yaml
        subPath: app_instance_info.yaml
  # {{- end }}          
  volumes:
    # {{- if .Values.global.mepagent.enabled }}
    - name: mep-agent-service-config-volume
      configMap:
        name: {{ .Values.global.mepagent.configmapname }}
    # {{- end }}
    - name: face-recognition-data
      persistentVolumeClaim:
        claimName: face-recognition-pvc
       
---
apiVersion: v1
kind: Service
metadata:
  labels:
    svc: face-recognition
  name: face-recognition
spec:
  type: NodePort
  ports:
    - port: 9999
      targetPort: 9999
      name: face-recognition  
      nodePort: 32222  
  selector:
    app: face-recognition