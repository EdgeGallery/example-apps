---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: fn-db
  labels:
    app: fn-postgres-service
spec:
  type: NodePort
  ports:
    - name: fn-postgres-service
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30888
  selector:
    app: fn-postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: fn-postgres-pod
  labels:
    app: fn-postgres
spec:
  selector:
    matchLabels:
      app: fn-postgres
  template:
    metadata:
      labels:
        app: fn-postgres
    spec:
      containers:
        - name: fn-postgres-pod
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/fn-postgres:1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - name: port
              containerPort: 5432
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: fn-postgres-initdb
      volumes:
        - name: fn-postgres-initdb
          configMap:
            name: fn-postgres-initdb-configmap

---

apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: fn-backend
  labels:
    app: fn-platform-service
spec:
  type: NodePort
  ports:
    - name: fn-platform-service
      protocol: TCP
      port: 8085
      targetPort: 8085
      nodePort: 30887
  selector:
    app: fn-platform

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: fn-platform-pod
  labels:
    app: fn-platform
spec:
  selector:
    matchLabels:
      app: fn-platform
  template:
    metadata:
      labels:
        app: fn-platform
    spec:
      containers:
        - name: fn-platform-pod
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/fn-platform:1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - name: port
              containerPort: 8085

---

apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: fn-ui-service
  labels:
    app: fn-ui-service
spec:
  type: NodePort
  ports:
    - name: fn-ui-service
      protocol: TCP
      port: 80
      targetPort: 8686
      nodePort: 30886
  selector:
    app: fn-ui

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: fn-ui-pod
  labels:
    app: fn-ui
spec:
  selector:
    matchLabels:
      app: fn-ui
  template:
    metadata:
      labels:
        app: fn-ui
    spec:
      containers:
        - name: fn-ui-pod
          image: '{{.Values.imagelocation.domainname}}/{{.Values.imagelocation.project}}/fn-ui:1.0'
          imagePullPolicy: IfNotPresent
          ports:
            - name: port
              containerPort: 8686



